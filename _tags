# OASIS_START
# DO NOT EDIT (digest: 7f8bf8f2af3e76bfe4aacef0fdac66af)
# Ignore VCS directories, you can use the same kind of rule outside
# OASIS_START/STOP if you want to exclude directories that contains
# useless stuff for the build process
true: annot, bin_annot
<**/.svn>: -traverse
<**/.svn>: not_hygienic
".bzr": -traverse
".bzr": not_hygienic
".hg": -traverse
".hg": not_hygienic
".git": -traverse
".git": not_hygienic
"_darcs": -traverse
"_darcs": not_hygienic
# Library rewrite
"src/core/rewrite.cmxs": use_rewrite
"src/core/Expr.cmx": for-pack(Rewrite)
"src/core/Builtins.cmx": for-pack(Rewrite)
"src/core/Parser.cmx": for-pack(Rewrite)
"src/core/Lexer.cmx": for-pack(Rewrite)
"src/core/Parse_loc.cmx": for-pack(Rewrite)
"src/core/Slice.cmx": for-pack(Rewrite)
"src/core/Bit_set.cmx": for-pack(Rewrite)
<src/core/*.ml{,i,y}>: package(bytes)
<src/core/*.ml{,i,y}>: package(containers)
<src/core/*.ml{,i,y}>: package(result)
<src/core/*.ml{,i,y}>: package(sequence)
<src/core/*.ml{,i,y}>: package(zarith)
# Executable cli
"src/cli/cli.native": package(bytes)
"src/cli/cli.native": package(containers)
"src/cli/cli.native": package(linenoise)
"src/cli/cli.native": package(result)
"src/cli/cli.native": package(sequence)
"src/cli/cli.native": package(zarith)
"src/cli/cli.native": use_rewrite
<src/cli/*.ml{,i,y}>: package(bytes)
<src/cli/*.ml{,i,y}>: package(containers)
<src/cli/*.ml{,i,y}>: package(linenoise)
<src/cli/*.ml{,i,y}>: package(result)
<src/cli/*.ml{,i,y}>: package(sequence)
<src/cli/*.ml{,i,y}>: package(zarith)
<src/cli/*.ml{,i,y}>: use_rewrite
# Library ipython
"src/ipython/ipython.cmxs": use_ipython
"src/ipython/base64.cmx": for-pack(Ipython)
"src/ipython/Ipython_json_j.cmx": for-pack(Ipython)
"src/ipython/Ipython_json_t.cmx": for-pack(Ipython)
"src/ipython/log.cmx": for-pack(Ipython)
"src/ipython/message.cmx": for-pack(Ipython)
"src/ipython/sockets.cmx": for-pack(Ipython)
<src/ipython/*.ml{,i,y}>: package(ZMQ)
<src/ipython/*.ml{,i,y}>: package(atdgen)
<src/ipython/*.ml{,i,y}>: package(bytes)
<src/ipython/*.ml{,i,y}>: package(containers)
<src/ipython/*.ml{,i,y}>: package(result)
<src/ipython/*.ml{,i,y}>: package(sequence)
<src/ipython/*.ml{,i,y}>: package(uuidm)
<src/ipython/*.ml{,i,y}>: package(yojson)
<src/ipython/*.ml{,i,y}>: package(zarith)
<src/ipython/*.ml{,i,y}>: use_rewrite
# Executable ipython_server
"src/server/ipython_server.native": package(ZMQ)
"src/server/ipython_server.native": package(atdgen)
"src/server/ipython_server.native": package(bytes)
"src/server/ipython_server.native": package(containers)
"src/server/ipython_server.native": package(result)
"src/server/ipython_server.native": package(sequence)
"src/server/ipython_server.native": package(threads)
"src/server/ipython_server.native": package(unix)
"src/server/ipython_server.native": package(uuidm)
"src/server/ipython_server.native": package(yojson)
"src/server/ipython_server.native": package(zarith)
"src/server/ipython_server.native": use_ipython
"src/server/ipython_server.native": use_rewrite
<src/server/*.ml{,i,y}>: package(ZMQ)
<src/server/*.ml{,i,y}>: package(atdgen)
<src/server/*.ml{,i,y}>: package(bytes)
<src/server/*.ml{,i,y}>: package(containers)
<src/server/*.ml{,i,y}>: package(result)
<src/server/*.ml{,i,y}>: package(sequence)
<src/server/*.ml{,i,y}>: package(threads)
<src/server/*.ml{,i,y}>: package(unix)
<src/server/*.ml{,i,y}>: package(uuidm)
<src/server/*.ml{,i,y}>: package(yojson)
<src/server/*.ml{,i,y}>: package(zarith)
<src/server/*.ml{,i,y}>: use_ipython
<src/server/*.ml{,i,y}>: use_rewrite
# Executable run_tests
"tests/run_tests.native": package(bytes)
"tests/run_tests.native": package(containers)
"tests/run_tests.native": package(oUnit)
"tests/run_tests.native": package(result)
"tests/run_tests.native": package(sequence)
"tests/run_tests.native": package(zarith)
"tests/run_tests.native": use_rewrite
<tests/*.ml{,i,y}>: package(bytes)
<tests/*.ml{,i,y}>: package(containers)
<tests/*.ml{,i,y}>: package(oUnit)
<tests/*.ml{,i,y}>: package(result)
<tests/*.ml{,i,y}>: package(sequence)
<tests/*.ml{,i,y}>: package(zarith)
<tests/*.ml{,i,y}>: use_rewrite
# OASIS_STOP
<src/**/*.cmx>: inline(100)
<src/**/*.ml>: warn(+a-4-44-29@8)

<src/**/*.atd>: package(atdgen)
<src/ipython/*_j.cmx>: for-pack(Ipython)
<src/ipython/*_t.cmx>: for-pack(Ipython)

true: color(always)
true: use_ocamlfind
